@{
    ViewData["Title"] = "Event Logs";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3" style="margin-top: 7px;">
        <h1 class="fw-bold page-title mb-0">Event Logs</h1>
        <h3 class="timedate"  id="liveDateTime"></h3>
    </div>

    <div class="card shadow-lg" style="border-radius: 12px; background-color:#F2F2F2;">
        <div class="table-responsive">
            <h3 class="card-text" style="padding: 18px 2px; margin: 0;">Alarm Logs</h3>
            <table class="table align-middle" style="font-size:16px;">
                <thead style="font-weight:bold;">
                    <tr>
                        <th>Date / Time</th>
                        <th>Alarm Title</th>
                        <th>Primary Name</th>
                        <th>Secondary Name</th>
                        <th>Alarm Description</th>
                    </tr>
                </thead>
                <tbody id="deviceTableBody">
                </tbody>
            </table>
        </div>
        <div class="pagination-wrapper">
            <div class="pagination-controls">
                <span>Page</span>
                <button class="Page-Number-icons"><i class="fas fa-chevron-left"></i></button>
                <span class="Page-Number"></span>
                <button class="Page-Number-icons"><i class="fas fa-chevron-right"></i></button>
                <span class="total-pages"></span>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid" style="padding-top: 18px;"> 
    <div class="card shadow-lg" style="border-radius: 12px; background: #F2F2F2;">
        <div class="table-responsive">
            <h3 class="card-text" style="padding: 18px 2px; margin: 0;">Event Logs</h3>
            <table class="table align-middle" style="font-size:16px; margin-bottom:0; border-collapse:collapse;">

                <thead style="font-weight:bold;">
                    <tr>
                        <th>Date / Time</th>
                        <th>Name</th>
                        <th>Primary Name</th>
                        <th>Secondary Name</th>
                        <th>Alarm Description</th>
                    </tr>
                </thead>
                <tbody id="deviceTableBodyE">
                </tbody>
            </table>
        </div>
        <div class="pagination-wrapper">
            <div class="pagination-controls">
                <span>Page</span>
                <button class="event-prev"><i class="fas fa-chevron-left"></i></button>
                <span class="event-page-number"></span>
                <button class="event-next"><i class="fas fa-chevron-right"></i></button>
                <span class="event-total-pages"></span>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script type="module">
        import { attachPaginationControls } from '/js/pagination.js';

        const rowsPerPage = { value: 5 };
        const currentPage = { value: 1 };
        const alarmData = { value: [] };

        function renderPage() {
            const totalPages = Math.ceil(alarmData.value.length / rowsPerPage.value);
            const start = (currentPage.value - 1) * rowsPerPage.value;
            const end = start + rowsPerPage.value;
            const pageData = alarmData.value.slice(start, end);

            document.getElementById('deviceTableBody').innerHTML = pageData.map(item => `
                    <tr style="height:40px;">
                                                            <td>${item.dateTime}</td>
                                                            <td>${item.name}</td>
                                                            <td>${item.primaryName}</td>
                                                            <td>${item.secondaryName}</td>
                                                            <td>${item.description}</td>
                                                        </tr>

                `).join('');

            document.querySelector('.Page-Number').innerText = currentPage.value;
            document.querySelector('.total-pages').innerText = `of ${totalPages} pages`;
        }

        fetch('/data/EventLogs.json')
            .then(response => response.json())
            .then(data => {
                alarmData.value = data;
                renderPage();
            })
            .catch(error => console.error("Error loading JSON:", error));

        attachPaginationControls( currentPage, rowsPerPage, alarmData, renderPage, '.Page-Number-icons i.fas.fa-chevron-left', '.Page-Number-icons i.fas.fa-chevron-right' );




        // Event Logs 
        const eventRowsPerPage = { value: 5 };
        const eventCurrentPage = { value: 1 };
        const eventData = { value: [] };

        function renderEventPage() {
            const totalPages = Math.ceil(eventData.value.length / eventRowsPerPage.value);
            const start = (eventCurrentPage.value - 1) * eventRowsPerPage.value;
            const end = start + eventRowsPerPage.value;
            const pageData = eventData.value.slice(start, end);


            document.getElementById('deviceTableBodyE').innerHTML = pageData.map(item => `

                                                <tr style="height:40px;">
                                                    <td>${item.dateTimeE}</td>
                                                    <td>${item.nameE}</td>
                                                    <td>${item.primaryNameE}</td>
                                                    <td>${item.secondaryNameE}</td>
                                                    <td>${item.descriptionE}</td>
                                                </tr>
                                            `;
                    tableBody.innerHTML += row;
                });
            })
            .catch(error => console.error("Error loading EventLogs JSON:", error));

            document.getElementById('deviceTableBodyE').innerHTML = pageData.map(item => `

            const day = now.getDate().toString().padStart(2, '0');
            const monthNames = [
                "January", "February", "March", "April", "May", "June",
                "July", "August", "September", "October", "November", "December"
            ];
            const month = monthNames[now.getMonth()];
            const year = now.getFullYear();

            `).join('');

            document.querySelector('.event-page-number').innerText = eventCurrentPage.value;
            document.querySelector('.event-total-pages').innerText = `of ${totalPages} pages`;
        }

        fetch('/data/Eventlogs2.json')
            .then(response => response.json())
            .then(data => {
                eventData.value = data;
                renderEventPage();
                attachPaginationControls( eventCurrentPage, eventRowsPerPage, eventData, renderEventPage, '.event-prev', '.event-next' );
            });

    </script>
    <script type="module">
        import { startLiveDateTime } from '/js/liveDateTime.js';
        startLiveDateTime('liveDateTime');
    </script>
}
